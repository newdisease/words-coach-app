version: '2'

services:

  db:
    restart: always
    image: postgres
    container_name: postgres
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"

  nginx:
    container_name: nginx
    restart: unless-stopped
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      - ./nginx/certbot/conf/:/etc/letsencrypt/
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt/
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backend:
    restart: always
    container_name: api
    command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn config.wsgi --bind 0.0.0.0:8000"
    env_file:
      - ./backend/.env
    build:
      context: ./backend/
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app/api
    expose:
      - 8000
    depends_on:
      - db

volumes:
  db:
